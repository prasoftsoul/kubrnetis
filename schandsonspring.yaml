apiVersion: apps/v1
kind: Deployment
metadata:
  name: springapp
  namespace: test-ns
spec:
  replicas: 2
  selector: 
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:  
    - name: springappcontainer
      image: prathapva/javaspring:1
      resources:
        requests:
          cpu: 200m
          memory: 250Mi
        limits:
          cpu: "500m"
          memory: "512Mi"
      port:
      - containerPort: 8080
      env:
      - name: MONGO_DB_HOSTNAME
        value: mongosvc
      - name: MONGO_DB_USERNAME
        value: devdb
      - name: MONGO_DB_PASSWORD
        value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
  namespace: test-ns
spec:
  type: NodePort
selector:
  app: springapp
ports:
- port: 80
  targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodb
  namespace: test-ns
spec:
selector:
  matchLabels:
    app: mongodb
template:
  metadata:
    labels:
      app: mongodb
  spec:    
  - name: mongodbcontainer
    image: mongo
  ports:
  - containerPort: 27017
  env:
  - name: MONGO_INITDB_ROOT_USERNAME
    value: devdb
  - name: MONGO_INITDB_ROOT_PASSWORD
    value: devdb@123
  volumeMounts:
  - name: mongodbvol
    mountPath: /data/db
  volumes:
  - name: mongodbvol
    PersistentVolumeClaim:
      claimName: mongopvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongopvc
  namespace: test-ns
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongosvc
  namespace: test-ns
spec:
  type: ClusterIP
selector:
  app: mongodb
ports:
- port: 27017
  targetPort: 27017    




